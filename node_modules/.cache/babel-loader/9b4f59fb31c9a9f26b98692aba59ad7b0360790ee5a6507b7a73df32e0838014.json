{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport cartReducer from './cartSlice';\nconst savedCart = localStorage.getItem('cartState');\nconst preloadedState = savedCart ? {\n  cart: JSON.parse(savedCart)\n} : undefined;\nexport const store = configureStore({\n  reducer: {\n    cart: cartReducer\n  },\n  preloadedState\n});\n\n// Save to localStorage on every change\nstore.subscribe(() => {\n  localStorage.setItem('cartState', JSON.stringify(store.getState().cart));\n});","map":{"version":3,"names":["configureStore","cartReducer","savedCart","localStorage","getItem","preloadedState","cart","JSON","parse","undefined","store","reducer","subscribe","setItem","stringify","getState"],"sources":["/Users/merlynmercy/Documents/projects/react-resto-app/src/redux/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport cartReducer from './cartSlice';\n\nconst savedCart = localStorage.getItem('cartState');\nconst preloadedState = savedCart ? { cart: JSON.parse(savedCart) } : undefined;\n\nexport const store = configureStore({\n  reducer: {\n    cart: cartReducer,\n  },\n  preloadedState,\n});\n\n// Save to localStorage on every change\nstore.subscribe(() => {\n  localStorage.setItem('cartState', JSON.stringify(store.getState().cart));\n});\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,aAAa;AAErC,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;AACnD,MAAMC,cAAc,GAAGH,SAAS,GAAG;EAAEI,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACN,SAAS;AAAE,CAAC,GAAGO,SAAS;AAE9E,OAAO,MAAMC,KAAK,GAAGV,cAAc,CAAC;EAClCW,OAAO,EAAE;IACPL,IAAI,EAAEL;EACR,CAAC;EACDI;AACF,CAAC,CAAC;;AAEF;AACAK,KAAK,CAACE,SAAS,CAAC,MAAM;EACpBT,YAAY,CAACU,OAAO,CAAC,WAAW,EAAEN,IAAI,CAACO,SAAS,CAACJ,KAAK,CAACK,QAAQ,CAAC,CAAC,CAACT,IAAI,CAAC,CAAC;AAC1E,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}